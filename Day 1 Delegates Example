using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DelegateExample
{
    public delegate void PrintName(String YourName);
    class Program
    {
        static void Main(string[] args)
        {
            List<Employee> empList = new List<Employee>();
            empList.Add(new Employee { ID = 1001, Name = "Pratik1", Experience = 5, Salary = 50000 });
            empList.Add(new Employee { ID = 1002, Name = "Pratik2", Experience = 4, Salary = 10000 });
            empList.Add(new Employee { ID = 1003, Name = "Pratik3", Experience = 3, Salary = 20000 });
            empList.Add(new Employee { ID = 1004, Name = "Pratik4", Experience = 7, Salary = 50000 });
            empList.Add(new Employee { ID = 1005, Name = "Pratik5", Experience = 1, Salary = 70000 });
            IsPromotable Iep = new IsPromotable(Logic);


            Employee.PromoteEmployee(empList, Iep);
            Console.ReadLine();


        }

        public static bool Logic(Employee emp)
        {
            if(emp.Experience>=5)
            {
                return true;
            }
            else
            {
                return false;
            }

        }
    }
    delegate bool IsPromotable(Employee epl);
    class Employee
    {
        public int ID { get; set; }
        public string Name { get; set; }
        public int Salary { get; set; }
        public int Experience { get; set; }

        public static void PromoteEmployee(List<Employee> EmployeeList, IsPromotable  IsEligibleToPromote)
        {
            foreach(Employee e in EmployeeList)
            {
                if(IsEligibleToPromote(e))
                {
                    Console.WriteLine(e.Name + " is promted");
                }
            }
        }
    }


}
